{"version":3,"file":"static/js/926.3d6a467a.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Components/InnerPreloader/InnerPreloader.module.scss?1560","Components/InnerPreloader/InnerPreloader.tsx","Components/Profile/Profile.tsx","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss?c323","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?d061","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","webpack://social-network/./src/Components/Profile/Avatar/Avatar.module.scss?40b0","Components/Profile/Avatar/Avatar.tsx","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileInfo.module.scss?c035","webpack://social-network/./src/Components/FriendsBlock/FriendItems/FriendItems.module.scss?6c85","webpack://social-network/./src/Components/FriendsBlock/Friend/Friend.module.scss?cbec","Components/FriendsBlock/Friend/Friend.tsx","Components/FriendsBlock/FriendItems/FriendItems.tsx","webpack://social-network/./src/Components/FriendsBlock/FriendsBlock.module.scss?b5d4","Components/FriendsBlock/FriendsBlock.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","HOC/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"InnerPreloader_loader__dTCTp\",\"spinner\":\"InnerPreloader_spinner__Z0g2F\"};","import s from './InnerPreloader.module.scss';\nimport innerLoader from '../../common/Img/inner-loader.gif';\nimport React from 'react';\n\nexport const InnerPreloader = () => {\n  return <div className={s.loader}>\n    <div className={s.spinner}>\n      <img src={innerLoader} alt=\"loader\"/>\n    </div>\n  </div>;\n};","import React, {useEffect} from \"react\";\nimport {clearProfileData, getUserStatus, loadUserProfile} from '../../bll/profile-reducer';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {useAppDispatch, useAppSelector} from '../../bll/hooks';\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport {WithAuthRedirect} from '../../HOC/WithAuthRedirect';\nimport {InnerPreloader} from '../InnerPreloader/InnerPreloader';\n\nexport type ContactsType = {\n    facebook: string | null,\n    website: string | null,\n    vk: string | null,\n    twitter: string | null,\n    instagram: string | null,\n    youtube: string | null,\n    github: string | null,\n    mainLink: string | null\n}\n\ntype PhotosType = {\n    small: string | null,\n    large: string | null\n}\nexport type ProfileType = {\n    aboutMe: string | null,\n    contacts: ContactsType,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: string | null,\n    fullName: string,\n    userId: number,\n    photos: PhotosType,\n}\n\nexport default WithAuthRedirect(() => {\n\n    const location = useLocation()\n    const {userId} = useParams()\n    const dispatch = useAppDispatch()\n    const {profile, status} = useAppSelector(state => state.profilePage)\n    useEffect(() => {\n        fetchProfile()\n        return () => {\n            dispatch(clearProfileData())\n        }\n    }, [userId])\n\n    const isOwner = location.pathname === '/'\n\n    const fetchProfile = () => {\n        if (userId) {\n            let id = +userId\n            dispatch(loadUserProfile(id))\n            dispatch(getUserStatus(id))\n        }\n    }\n\n    if (!profile) {\n        return <InnerPreloader/>\n    }\n\n    return <ProfileInfo status={status} profile={profile} isOwner={isOwner}/>\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileData_container__1G3yo\",\"fullName\":\"ProfileData_fullName__oLyay\",\"dataGrid\":\"ProfileData_dataGrid__RAyHk\",\"contacts\":\"ProfileData_contacts__dF6h0\",\"links\":\"ProfileData_links__Yzeqs\",\"label\":\"ProfileData_label__HPI01\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileStatus_container__L8joB\",\"owner\":\"ProfileStatus_owner__+9+yW\",\"status\":\"ProfileStatus_status__+njM-\",\"active\":\"ProfileStatus_active__og6tM\"};","import React, { ChangeEvent, memo, useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../../bll/hooks';\nimport { updateUserStatus } from '../../../../bll/profile-reducer';\nimport s from './ProfileStatus.module.scss';\nimport { Input } from 'antd';\n\ntype PropsType = {\n  isOwner: boolean;\n}\n\nexport const ProfileStatus = memo(({ isOwner }: PropsType) => {\n\n  const profileStatus = useAppSelector(state => state.auth.status);\n  const dispatch = useAppDispatch();\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [status, setStatus] = useState<string | null>(profileStatus || '');\n\n  useEffect(() => {\n    setStatus(profileStatus);\n  }, [profileStatus]);\n\n  const onEditMode = () => {\n    if (isOwner) {\n      setEditMode(true);\n    }\n  };\n\n  const offEditMode = () => {\n    setEditMode(false);\n    if (status && status !== profileStatus) dispatch(updateUserStatus(status));\n  };\n\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div\n      className={`${s.container} ${isOwner ? s.owner : \"\"}`}\n      onClick={onEditMode}\n    >\n      {!editMode\n        ? (\n          <div className={s.status}>\n            {status || 'Enter your status'}\n          </div>\n        )\n        : <Input onChange={onStatusChange} autoFocus onBlur={offEditMode} value={status!}/>}\n    </div>\n  );\n});","import React, { Fragment } from 'react';\nimport s from './ProfileData.module.scss';\nimport { ProfileType } from '../../Profile';\nimport { ProfileStatus } from '../ProfileStatus/ProfileStatus';\n\ntype ProfileDataPropsType = {\n  isOwner: boolean\n  profile: ProfileType\n}\n\nexport const ProfileData = ({ isOwner, profile }: ProfileDataPropsType) => {\n\n  const { contacts, aboutMe, lookingForAJob, lookingForAJobDescription, fullName } = profile;\n\n  const contactsKeys = Object.keys(contacts);\n  const contactsValues = Object.values(contacts);\n  const isRendering = contactsValues.some(value => value !== null);\n\n  const mappedContacts = contactsKeys.map((key, i) => {\n    return <Fragment key={contactsKeys[i]}><span className={s.label}>{key}:</span>\n      {<a target={'_blank'} rel={'noreferrer'} href={contactsValues[i]!}> {contactsValues[i]}</a>}</Fragment>;\n  });\n\n  return (\n    <div className={s.container}>\n      <span className={s.fullName}>{fullName}</span>\n      <ProfileStatus isOwner={isOwner}/>\n      <div className={s.dataGrid}>\n        <span className={s.label}>Looking for a job:</span><span>{lookingForAJob ? 'Yes' : 'No'}</span>\n        {lookingForAJob && <>\n          <span className={s.label}>My professional skills:</span><span>{lookingForAJobDescription}</span>\n        </>}\n        <span className={s.label}>Full name: </span><span>{fullName}</span>\n        {aboutMe && <>\n          <span className={s.label}>About me: </span><span>{aboutMe}</span>\n        </>}\n      </div>\n      {isRendering && <div className={s.contacts}>\n        <span className={s.label}>Contacts:</span>\n        <div className={s.links}>\n          {mappedContacts}\n        </div>\n      </div>}\n    </div>);\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Avatar_container__ngJhg\",\"avatar\":\"Avatar_avatar__ALGUE\",\"deleter\":\"Avatar_deleter__WKCy0\",\"active\":\"Avatar_active__2zc6z\",\"uploader\":\"Avatar_uploader__Tf+7l\",\"input\":\"Avatar_input__uwot-\",\"button\":\"Avatar_button__a7jgd\"};","import userPhoto from '../../../common/Img/zoolanderDef.jpg';\nimport React, { ChangeEvent, useState } from 'react';\nimport { Nullable, uploadPhoto } from '../../../bll/profile-reducer';\nimport { useAppDispatch } from '../../../bll/hooks';\nimport s from './Avatar.module.scss';\n\ntype PropsType = {\n  avatar: Nullable<string>;\n  isOwner: boolean;\n}\n\nexport const Avatar = ({ avatar, isOwner }: PropsType) => {\n\n  const [isShow, setIsShow] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const onMainPhotoSelect = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files!.length) dispatch(uploadPhoto(e.target.files![0]));\n  };\n\n  const showUploaderHandler = () => setIsShow(true);\n  const hideUploaderHandler = () => setIsShow(false);\n\n  const uploaderClassName = `${s.uploader} ${isShow && s.active}`;\n\n  return (\n    <div className={s.container} onMouseEnter={showUploaderHandler} onMouseLeave={hideUploaderHandler}>\n      <div role=\"presentation\" style={{ backgroundImage: `url(${avatar || userPhoto})` }} className={s.avatar}/>\n      {isOwner && <div className={uploaderClassName}>\n        <label>\n          <input accept=\".jpg, .jpeg, .png\" className={s.input} onChange={onMainPhotoSelect} type={'file'}/>\n          <span className={s.button}>Upload photo</span>\n        </label>\n      </div>}\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoContainer\":\"ProfileInfo_profileInfoContainer__MSnFX\",\"leftContainer\":\"ProfileInfo_leftContainer__9+RDq\",\"rightContainer\":\"ProfileInfo_rightContainer__dnA8a\",\"container\":\"ProfileInfo_container__pib2O\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FriendItems_container__g1ytj\"};","// extracted by mini-css-extract-plugin\nexport default {\"friend\":\"Friend_friend__GWKLH\",\"active\":\"Friend_active__Iv2aI\",\"name\":\"Friend_name__bKDVF\",\"avatar\":\"Friend_avatar__VgTbv\"};","import React from 'react';\nimport s from './Friend.module.scss';\nimport { useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  avatar: string;\n  name: string;\n  id: number;\n}\n\nexport function Friend({ avatar, name, id }: PropsType) {\n\n  const navigate = useNavigate();\n\n  const onProfileNavigateHandler = () => navigate(`profile/${id}`);\n\n  return (\n    <div className={s.friend} onClick={onProfileNavigateHandler}>\n      <div className={s.avatar} style={{ backgroundImage: `url(${avatar})` }}/>\n      {'\\n'}\n      <span className={s.name}>{name}</span>\n    </div>\n  );\n}","import {useAppSelector} from '../../../bll/hooks';\nimport s from './FriendItems.module.scss';\nimport {Friend} from '../Friend/Friend';\nimport user from '../../../common/Img/user.svg';\nimport React from 'react';\n\nexport const FriendItems = () => {\n    const {friends} = useAppSelector(state => state.sidebar)\n    let friendItems = friends.map(({photos, name, id}) => {\n        return <Friend key={id} id={id} avatar={photos.small || user} name={name}/>\n    })\n\n    return <div className={s.container}>\n        {friendItems}\n    </div>\n}","// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"FriendsBlock_friends__P8o4W\",\"header\":\"FriendsBlock_header__N0+6u\",\"count\":\"FriendsBlock_count__FOMkm\"};","import { useAppSelector } from '../../bll/hooks';\nimport { FriendItems } from './FriendItems/FriendItems';\nimport s from './FriendsBlock.module.scss';\n\nexport function FriendsBlock() {\n\n    const totalFriendsCount = useAppSelector(state => state.sidebar.totalFriendsCount)\n\n    return (\n        <div className={s.friends}>\n            <span className={s.header}>Friends</span>\n            {totalFriendsCount && <span className={s.count}>Total: {totalFriendsCount}</span>}\n            <FriendItems />\n        </div>\n    )\n}","import React from \"react\";\nimport { Nullable } from '../../../bll/profile-reducer';\nimport { ProfileData } from './ProfileData/ProfileData';\nimport { ProfileType } from '../Profile';\nimport { Avatar } from '../Avatar/Avatar';\nimport s from './ProfileInfo.module.scss';\nimport { FriendsBlock } from '../../FriendsBlock/FriendsBlock';\n\ntype PropsType = {\n  isOwner: boolean\n  profile: Nullable<ProfileType>\n  status: Nullable<string>\n}\n\nexport const ProfileInfo = ({ isOwner, profile }: PropsType) => {\n  const rightContainerClassName = `${s.rightContainer}`;\n  const leftContainerClassName = `${s.leftContainer}`;\n\n  return (\n    <div className={s.profileInfoContainer}>\n      <div className={leftContainerClassName}>\n        <div className={s.container}>\n          <Avatar avatar={profile!.photos.large} isOwner={isOwner}/>\n        </div>\n        <div className={s.container}>\n          <FriendsBlock/>\n        </div>\n      </div>\n\n      <div className={rightContainerClassName}>\n        <div className={s.container}>\n          <ProfileData profile={profile!} isOwner={isOwner}/>\n        </div>\n        {/*<div className={s.container}>\n         <MyPosts/>\n         </div>*/}\n      </div>\n    </div>\n  );\n};\n","import {FC} from 'react';\nimport {Navigate} from 'react-router-dom';\nimport {useAppSelector} from '../bll/hooks';\n\nexport function WithAuthRedirect<T>(Component: FC<T>) {\n    function RedirectComponent(props: T) {\n        const {isAuth} = useAppSelector(state => state.auth)\n        if (!isAuth) return <Navigate to={'/login'}/>\n        return <Component {...props}/>\n    }\n    return RedirectComponent;\n}"],"names":["InnerPreloader","className","s","src","innerLoader","alt","WithAuthRedirect","location","useLocation","userId","useParams","dispatch","useAppDispatch","useAppSelector","state","profilePage","profile","status","useEffect","fetchProfile","clearProfileData","isOwner","pathname","id","loadUserProfile","getUserStatus","ProfileStatus","memo","profileStatus","auth","useState","editMode","setEditMode","setStatus","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileData","contacts","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","contactsKeys","Object","keys","contactsValues","values","isRendering","some","mappedContacts","map","key","i","Fragment","target","rel","href","Avatar","avatar","isShow","setIsShow","uploaderClassName","onMouseEnter","onMouseLeave","role","style","backgroundImage","userPhoto","accept","files","length","uploadPhoto","type","Friend","name","navigate","useNavigate","FriendItems","friendItems","sidebar","friends","photos","small","user","FriendsBlock","totalFriendsCount","ProfileInfo","rightContainerClassName","leftContainerClassName","large","Component","props","isAuth","to"],"sourceRoot":""}