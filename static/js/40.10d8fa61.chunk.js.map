{"version":3,"file":"static/js/40.10d8fa61.chunk.js","mappings":"6KAeA,IARqB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,SAAaC,GAAyB,YAC5D,OACE,SAAC,KAAD,kBAAYA,GAAZ,aACGD,O,8ECTP,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BCA3G,EAAyB,2BAAzB,EAA6D,2B,mBCIhDE,EAAa,SAACC,GACvB,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCPxD,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA+F,0BCGlFC,EAAU,SAACN,GACpB,OACI,iBAAKC,UAAWD,EAAMO,OAASL,EAAYA,EAA3C,UAAoDF,EAAMQ,SACtD,gBAAKP,UAAWC,EAAhB,uB,2DCNZ,EAA8B,iCCKtBO,EAASC,EAAAA,EAAAA,KACTC,EAAaC,EAAAA,EAAAA,SAMRC,EAAc,WACzB,MAAeH,EAAAA,EAAAA,UAARI,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,KAOjB,OAAO,UAAC,IAAD,CACLC,OAAO,WACPhB,UAAWC,EACXY,KAAMA,EACNI,SATe,SAACC,GAChBJ,GAASK,EAAAA,EAAAA,GAAWD,EAAKX,UACzBM,EAAKO,eAGA,WAML,SAACZ,EAAD,CAAMJ,KAAK,UAAUiB,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,2BAAxD,UACE,SAACG,EAAD,CAAUa,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAE7C,SAACC,EAAA,EAAD,CAAcC,SAAS,SAAvB,8BCFJ,GAtBgBC,E,QAAAA,IAAiB,WAE/B,OAA8BC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,eAApDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACbC,EAAcF,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAACtC,EAAD,CAAuBM,KAAMgC,EAAEhC,KAAMD,GAAIiC,EAAEjC,IAA1BiC,EAAEjC,OAClDkC,EAAeJ,EAASE,KAAI,SAAAG,GAAC,OAAI,SAACjC,EAAD,CAAoBF,GAAImC,EAAEnC,GAAII,QAAS+B,EAAE/B,QAASD,OAAQgC,EAAEhC,QAA9CgC,EAAEnC,OAErD,OACE,iBAAKH,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGiC,KAEH,iBAAKlC,UAAWC,EAAhB,WACE,yBACGoC,KAEH,SAACzB,EAAD,c,gGCnBD,SAASgB,EAAoBW,GAMhC,OALA,SAA2BxC,GAEvB,OADiB8B,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMU,QAAxCC,QAEA,SAACF,GAAD,UAAexC,KADF,SAAC,KAAD,CAAUG,GAAI","sources":["Components/CommonUI/CommonButton/CommonButton.tsx","webpack://social-network/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://social-network/./src/Components/Dialogs/Dialog/DialogItem.module.css?54cf","Components/Dialogs/Dialog/DialogItem.tsx","webpack://social-network/./src/Components/Dialogs/Message/MessageItem.module.css?7a19","Components/Dialogs/Message/MessageItem.tsx","webpack://social-network/./src/Components/Dialogs/AddMessageForm/MessageForm.module.scss?1f19","Components/Dialogs/AddMessageForm/MessageForm.tsx","Components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { ReactNode } from 'react';\n\ninterface IButton extends ButtonProps {\n  children?: ReactNode;\n}\n\nconst CommonButton = ({ children, ...restProps }: IButton) => {\n  return (\n    <Button {...restProps}>\n      {children}\n    </Button>\n  );\n};\n\nexport default CommonButton;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__BGPct\",\"dialogsItems\":\"Dialogs_dialogsItems__r5d2y\",\"messages\":\"Dialogs_messages__bNmqK\",\"container\":\"Dialogs_container__A7Esj\",\"addMsg\":\"Dialogs_addMsg__951pz\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__iL+4l\",\"active\":\"DialogItem_active__3rzmH\"};","import React from 'react';\nimport s from './DialogItem.module.css';\nimport {NavLink} from 'react-router-dom';\nimport {DialogType} from '../../../bll/dialogs-reducer';\n\nexport const DialogItem = (props: DialogType) => {\n    return (\n        <div className={`${s.dialog} ${s.active}`}>\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__RT+gw\",\"self\":\"MessageItem_self__SYOML\",\"time\":\"MessageItem_time__O0tXE\"};","import React from 'react';\nimport s from './MessageItem.module.css';\nimport {MessageType} from '../../../bll/dialogs-reducer';\n\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={props.sender ? s.message : s.self}>{props.message}\n            <div className={s.time}>20:00</div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"messageForm\":\"MessageForm_messageForm__9hoHL\"};","import { useAppDispatch } from '../../../bll/hooks';\nimport { addMessage } from '../../../bll/dialogs-reducer';\nimport { Form, Input } from 'antd';\nimport CommonButton from '../../CommonUI/CommonButton/CommonButton';\nimport s from './MessageForm.module.scss';\n\nconst { Item } = Form;\nconst { TextArea } = Input;\n\ntype MessageData = {\n  message: string\n}\n\nexport const MessageForm = () => {\n  const [form] = Form.useForm();\n\n  const dispatch = useAppDispatch();\n\n  const onSubmit = (data: MessageData) => {\n    dispatch(addMessage(data.message));\n    form.resetFields();\n  };\n\n  return <Form\n    layout=\"vertical\"\n    className={s.messageForm}\n    form={form}\n    onFinish={onSubmit}\n  >\n    <Item name=\"message\" rules={[{ required: true, message: 'Message can\\'t be empty' }]}>\n      <TextArea autoSize={{ minRows: 3, maxRows: 6 }}/>\n    </Item>\n    <CommonButton htmlType=\"submit\">\n      Send message\n    </CommonButton>\n  </Form>;\n};","import React from 'react';\nimport s from './Dialogs.module.scss';\nimport { DialogItem } from './Dialog/DialogItem';\nimport { Message } from './Message/MessageItem';\nimport { MessageForm } from './AddMessageForm/MessageForm';\nimport { useAppSelector } from '../../bll/hooks';\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect';\n\nconst Dialogs = WithAuthRedirect(() => {\n\n  const { dialogs, messages } = useAppSelector(state => state.dialogsPage);\n  let dialogItems = dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n  let messageItems = messages.map(m => <Message key={m.id} id={m.id} message={m.message} sender={m.sender}/>);\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogItems}\n      </div>\n      <div className={s.messages}>\n        <div>\n          {messageItems}\n        </div>\n        <MessageForm/>\n      </div>\n\n    </div>\n  );\n});\n\nexport default Dialogs;","import {FC} from 'react';\nimport {Navigate} from 'react-router-dom';\nimport {useAppSelector} from '../bll/hooks';\n\nexport function WithAuthRedirect<T>(Component: FC<T>) {\n    function RedirectComponent(props: T) {\n        const {isAuth} = useAppSelector(state => state.auth)\n        if (!isAuth) return <Navigate to={'/login'}/>\n        return <Component {...props}/>\n    }\n    return RedirectComponent;\n}"],"names":["children","restProps","DialogItem","props","className","s","to","id","name","Message","sender","message","Item","Form","TextArea","Input","MessageForm","form","dispatch","useAppDispatch","layout","onFinish","data","addMessage","resetFields","rules","required","autoSize","minRows","maxRows","CommonButton","htmlType","WithAuthRedirect","useAppSelector","state","dialogsPage","dialogs","messages","dialogItems","map","d","messageItems","m","Component","auth","isAuth"],"sourceRoot":""}