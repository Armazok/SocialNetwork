{"version":3,"file":"static/js/932.e4c1c910.chunk.js","mappings":"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","sources":["Components/CommonUI/CommonButton/CommonButton.tsx","webpack://social-network/./src/Components/Settings/PersonalInformation/PersonalInformation.module.scss?bcc9","Components/Settings/PersonalInformation/PerfonalInformation.tsx","constants/settings.tsx","webpack://social-network/./src/Components/Settings/Settings.module.scss?b482","Components/Settings/Settings.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { ReactNode } from 'react';\n\ninterface IButton extends ButtonProps {\n  children?: ReactNode;\n}\n\nconst CommonButton = ({ children, ...restProps }: IButton) => {\n  return (\n    <Button {...restProps}>\n      {children}\n    </Button>\n  );\n};\n\nexport default CommonButton;","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"PersonalInformation_main__FdYuj\",\"formTitle\":\"PersonalInformation_formTitle__qqG6U\",\"formItem\":\"PersonalInformation_formItem__67LXG\"};","import { Checkbox, Form, Input } from 'antd';\nimport React, { useEffect } from 'react';\nimport CommonButton from '../../CommonUI/CommonButton/CommonButton';\nimport s from './PersonalInformation.module.scss';\nimport { useAppDispatch, useAppSelector } from '../../../bll/hooks';\nimport { submitProfile } from '../../../bll/profile-reducer';\nimport { clearSubmitErrors } from '../../../bll/auth-reducer';\nimport { ProfileDataType } from '../../../api/profileAPI';\n\nconst { Item } = Form;\nconst { TextArea } = Input;\n\ntype SubmitDataType = {\n  lookingForAJob: boolean,\n  lookingForAJobDescription: string,\n  fullName: string,\n  aboutMe: string,\n  facebook: string | null,\n  website: string | null,\n  vk: string | null,\n  twitter: string | null,\n  instagram: string | null,\n  youtube: string | null,\n  github: string | null,\n  mainLink: string | null\n}\n\nconst PersonalInformation = () => {\n  const [form] = Form.useForm();\n\n  const profile = useAppSelector(state => state.auth.authProfile);\n  const errors = useAppSelector(state => state.auth.submitErrors);\n  const isFetching = useAppSelector(state => state.auth.isFetching);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (errors.length) {\n      errors.forEach(error => {\n        const regexp = new RegExp(/>(.*?)\\)/g);\n        const name = regexp.exec(error)?.[1].replace(/(.)/, (l) => l.toLowerCase());\n        if (name) form.setFields([{ name, errors: ['Wrong url format'] }]);\n      });\n    }\n  }, [errors, form]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearSubmitErrors());\n    };\n  }, [dispatch]);\n\n  const submitInfo = async (data: SubmitDataType) => {\n    const {\n      facebook,\n      website,\n      vk,\n      twitter,\n      instagram,\n      youtube,\n      github,\n      mainLink,\n      aboutMe,\n      lookingForAJob,\n      lookingForAJobDescription,\n      fullName\n    } = data;\n\n    const contacts = { facebook, website, vk, twitter, instagram, youtube, github, mainLink };\n\n    const keys = Object.keys(contacts);\n    const contactsToSubmit = keys.reduce((acc, el) => {\n      // @ts-ignore\n      if (!contacts[el]) return acc;\n      // @ts-ignore\n      return { ...acc, [el]: contacts[el] };\n    }, {});\n\n    const dataToSubmit = {\n      aboutMe,\n      lookingForAJob,\n      lookingForAJobDescription,\n      fullName,\n      contacts: contactsToSubmit,\n    } as ProfileDataType;\n\n    await dispatch(submitProfile(dataToSubmit));\n  };\n\n  const defaultValues = {\n    ...profile?.contacts,\n    aboutMe: profile?.aboutMe || '',\n    fullName: profile?.fullName || '',\n    lookingForAJobDescription: profile?.lookingForAJobDescription || '',\n    lookingForAJob: profile?.lookingForAJob || false,\n  };\n\n  return (\n    <div className={s.main}>\n      <Form form={form} initialValues={defaultValues} layout=\"vertical\" onFinish={submitInfo}>\n        <p className={s.formTitle}>Common information</p>\n        <Item\n          rules={[{ required: true, message: 'Full name field cannot be empty' }]}\n          name=\"fullName\"\n          label=\"Full name\"\n        >\n          <Input/>\n        </Item>\n        <Item\n          rules={[{ required: true, message: 'Skills review field cannot be empty' }]}\n          name=\"lookingForAJobDescription\"\n          label=\"Short skills review\"\n        >\n          <TextArea autoSize={{ minRows: 3, maxRows: 6 }}/>\n        </Item>\n        <Item\n          rules={[{ required: true, message: 'About yourself field cannot be empty' }]}\n          name=\"aboutMe\"\n          label=\"About yourself\"\n        >\n          <TextArea autoSize={{ minRows: 3, maxRows: 6 }}/>\n        </Item>\n        <Item\n          name=\"lookingForAJob\"\n          label=\"Looking for a job\"\n          valuePropName=\"checked\"\n          className={s.formItem}\n        >\n          <Checkbox/>\n        </Item>\n        <p className={s.formTitle}>Contact links</p>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"facebook\" label=\"Facebook\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"website\" label=\"Your website\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"vk\" label=\"VK\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"twitter\" label=\"Twitter\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"instagram\" label=\"Instagram\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"youtube\" label=\"Youtube\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"github\" label=\"GitHub\">\n          <Input/>\n        </Item>\n        <Item rules={[{ validateTrigger: 'onChange' }]} name=\"mainLink\" label=\"Main link\">\n          <Input/>\n        </Item>\n        <CommonButton disabled={isFetching} loading={isFetching} htmlType=\"submit\">\n          Submit\n        </CommonButton>\n      </Form>\n    </div>\n  );\n};\n\nexport default PersonalInformation;","import PersonalInformation from \"../Components/Settings/PersonalInformation/PerfonalInformation\";\n\nexport const settingsItems = [\n  { label: 'Personal information', key: '2', children: <PersonalInformation/> },\n];","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Settings_main__lSsoP\"};","import { Tabs } from 'antd';\nimport React from 'react';\nimport { settingsItems } from '../../constants/settings';\nimport s from './Settings.module.scss';\n\nconst Settings = () => {\n  return (\n    <div className={s.main}>\n      <Tabs\n        destroyInactiveTabPane\n        tabPosition=\"left\"\n        items={settingsItems}\n      />\n    </div>\n  );\n};\n\nexport default Settings;"],"names":["children","restProps","Item","Form","TextArea","Input","form","profile","useAppSelector","state","auth","authProfile","errors","submitErrors","isFetching","dispatch","useAppDispatch","useEffect","length","forEach","error","name","RegExp","exec","replace","l","toLowerCase","setFields","clearSubmitErrors","submitInfo","data","facebook","website","vk","twitter","instagram","youtube","github","mainLink","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","contacts","keys","Object","contactsToSubmit","reduce","acc","el","dataToSubmit","submitProfile","defaultValues","className","s","initialValues","layout","onFinish","rules","required","message","label","autoSize","minRows","maxRows","valuePropName","validateTrigger","CommonButton","disabled","loading","htmlType","settingsItems","key","destroyInactiveTabPane","tabPosition","items"],"sourceRoot":""}